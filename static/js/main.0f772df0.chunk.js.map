{"version":3,"sources":["App.js","reportWebVitals.js","index.js"],"names":["App","props","handleSubmit","e","preventDefault","console","log","datas","state","name","refs","value","cocktailName","points","act","data","push","index","document","getElementById","innerHTML","setState","myForm","reset","focus","handleReset","handleRemove","i","splice","handleEdit","title1","title2","this","className","ref","htmlFor","type","placeholder","min","max","maxlength","required","onClick","id","class","map","Component","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.0f772df0.chunk.js","sourcesContent":["import React, { Component } from \"react\";\nimport \"./App.css\";\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      title1: \"Add Entry\",\n      title2: \"Entries\",\n      act: 0,\n      index: \"\",\n      datas: [\n        { name: \"Jack\", cocktailName: \"Malta\", points: \"2\" },\n        { name: \"Rob\", cocktailName: \"Malta\", points: \"2\" },\n        { name: \"Harry\", cocktailName: \"Malta\", points: \"2\" },\n        { name: \"Himesh\", cocktailName: \"Malta\", points: \"2\" },\n      ],\n    };\n  }\n\n  componentDidMount() {\n    this.refs.name.focus();\n  }\n\n  handleSubmit = (e) => {\n    e.preventDefault();\n    console.log(\"try\");\n\n    let datas = this.state.datas;\n    let name = this.refs.name.value;\n    let cocktailName = this.refs.cocktailName.value;\n    let points = this.refs.points.value;\n\n    if (this.state.act === 0) {\n      let data = {\n        name,\n        cocktailName,\n        points,\n      };\n      datas.push(data);\n    } else {\n      let index = this.state.index;\n      datas[index].name = name;\n      datas[index].cocktailName = cocktailName;\n      datas[index].points = points;\n      document.getElementById(\"resetafteredit\").innerHTML = \"Add\";\n    }\n\n    this.setState({\n      datas: datas,\n      act: 0,\n    });\n\n    this.refs.myForm.reset();\n    this.refs.name.focus();\n  };\n\n  handleReset = () => {\n    this.refs.myForm.reset();\n  };\n\n  handleRemove = (i) => {\n    let datas = this.state.datas;\n    datas.splice(i, 1);\n    this.setState({\n      datas: datas,\n    });\n\n    this.refs.myForm.reset();\n    this.refs.name.focus();\n  };\n\n  handleEdit = (i) => {\n    let data = this.state.datas[i];\n    this.refs.name.value = data.name;\n    this.refs.cocktailName.value = data.cocktailName;\n    this.refs.points.value = data.points;\n    document.getElementById(\"resetafteredit\").innerHTML = \"Update\";\n\n    this.setState({\n      act: 1,\n      index: i,\n    });\n\n    this.refs.name.focus();\n  };\n  render() {\n    let datas = this.state.datas;\n    return (\n      <div className=\"outter\">\n        <div className=\"nav\">\n          <h2>Task</h2>\n        </div>\n\n        <div className=\"mainlayout\">\n          <div className=\"entryDiv\">\n            {\" \"}\n            <form ref=\"myForm\" className=\"myForm\">\n              <h1>{this.state.title1}</h1>\n              <div>\n                {\" \"}\n                <div className=\"entername\">\n                  {\" \"}\n                  <label htmlFor=\"\">Name</label>\n                  <input\n                    type=\"text\"\n                    ref=\"name\"\n                    placeholder=\"Enter your name\"\n                    className=\"formField\"\n                    min=\"3\"\n                    max=\"10\"\n                    maxlength=\"30\"\n                    required\n                  />\n                </div>\n                <div className=\"entercocktail\">\n                  {\" \"}\n                  <label htmlFor=\"\">Select cocktail</label>\n                  <select\n                    type=\"select\"\n                    name=\"selection\"\n                    ref=\"cocktailName\"\n                    placeholder=\"Cocktails\"\n                    min=\"0\"\n                    max=\"10\"\n                    className=\"formField\"\n                    maxlength=\"30\"\n                    required\n                  >\n                    <option value=\"Malta\">Malta</option>\n                    <option value=\"Santrá\">Santrá</option>\n                    <option value=\"Sönfee\">Sönfee</option>\n                  </select>\n                </div>\n                <div className=\"enterpoints\">\n                  <label htmlFor=\"\">Points (0 to 10)</label>\n                  <input\n                    required\n                    type=\"number\"\n                    ref=\"points\"\n                    placeholder=\"Give points\"\n                    className=\"formField\"\n                    min=\"0\"\n                    max=\"10\"\n                    maxlength=\"30\"\n                  />\n                </div>\n              </div>\n              <div className=\"addentrybutton\">\n                <button\n                  type=\"submit\"\n                  onClick={(e) => this.handleSubmit(e)}\n                  className=\"myButton\"\n                  id=\"resetafteredit\"\n                >\n                  Add{\" \"}\n                </button>\n                <button\n                  onClick={(e) => this.handleReset(e)}\n                  className=\"myButton\"\n                >\n                  Reset\n                </button>\n              </div>\n            </form>\n          </div>\n\n          <div className=\"entriesDiv\">\n            <pre>\n              <h1>{this.state.title2}</h1>\n              <div className=\"cocktailpoints\">\n                <div id=\"Maltapoint\">#1 Malta()</div>\n                <div class=\"list_leaderItem__2_UTL\">#2 Santrá()</div>\n                <div class=\"list_leaderItem__2_UTL\">\n                  #3 Sönfee({this.state.points})\n                </div>\n              </div>\n              <div className=\"Lhead\">\n                <div>Name</div>\n                <div>Cocktail</div>\n                <div>Points Given</div>\n                <div>Action</div>\n              </div>\n              <div className=\"scroll\">\n                {datas.map((data, i) => (\n                  <div className=\"finalEntries\">\n                    <li key={i} className=\"myList\">\n                      <div>{data.name}</div> <div>{data.cocktailName}</div>{\" \"}\n                      <div>{data.points}</div>\n                      <div id=\"editing\">\n                        <button onClick={() => this.handleEdit(i)}>\n                          Edit{\" \"}\n                        </button>\n\n                        <button onClick={() => this.handleRemove(i)}>\n                          Delete{\" \"}\n                        </button>\n                      </div>\n                    </li>\n                  </div>\n                ))}\n              </div>\n            </pre>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}